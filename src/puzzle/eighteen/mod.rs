mod test;

use rayon::prelude::*;

#[derive(Debug, PartialEq, Eq)]
struct Point {
    x: usize,
    y: usize,
    wall: bool,
    key: Option<char>,
    door: Option<char>,
}

impl Point {
    fn from_char(input: char, x: usize, y: usize) -> Point {
        Point {
            x,
            y,
            wall: input == '#',
            key: if input.is_ascii_lowercase() {
                Some(input)
            } else {
                None
            },
            door: if input.is_ascii_uppercase() {
                Some(input)
            } else {
                None
            },
        }
    }

    fn traversable_immediate_points(&self, points: &Vec<Point>) -> &Vec<Point> {
        &points
            .par_iter()
            .filter(|p| {
                !p.wall && (p.x == (self.x + 1) || p.x == (self.x - 1)) && (p.y == self.y)
                    || (p.y == (self.y + 1) || p.y == (self.y - 1)) && (p.x == self.x)
            })
            .collect::<Vec<Point>>()
    }

    fn traversable_points(&self, points: &Vec<Point>) -> Vec<Point> {
        let tp = self.traversable_immediate_points(points);

        tp.iter()
            .map(|x| {
                x.traversable_points(points)
                    .iter()
                    .map(|x| *x)
                    .filter(|x| x != self)
            })
            .flatten()
            .collect::<Vec<Point>>()
    }

    // fn closest_traversable_key_point<'a>(&self, points: &'a Vec<Point>) -> Point {}
}

fn generate_points(input: &str) -> Vec<Point> {
    input
        .split('\n')
        .collect::<Vec<&str>>()
        .par_iter()
        .enumerate()
        .map(|x| {
            x.1.chars()
                .collect::<Vec<char>>()
                .iter()
                .enumerate()
                .map(|y| Point::from_char(*y.1, x.0, y.0))
                .collect::<Vec<Point>>()
        })
        .flatten()
        .collect::<Vec<Point>>()
}

pub fn solve() {
    let points = generate_points(INPUT);
    for p in &points {
        if p.x == 79 && p.y == 65 {
            let tp = p.traversable_points(&points);
            println!("Traversable points from {:?} are: {:?}", p, tp);
        }
    }
}

const INPUT: &str =
    "#################################################################################
#.....#...............#.....#.A.#.......#.....#e..............#.....#...........#
#.###.#########.#####.###.#.###.#.###.#.###.#.###.###########.#.#.###.#####.#####
#.#.#.....#...#.#...#.#...#.....#.#.#.#.#...#..m#...#.......#.#.#.#...#.#...#...#
#.#.#####.#.#.#.#.###.#.#########.#.#.###.#####.###.#.#######.###.#.###.#N###.#.#
#.#.#...#...#...#...#.#.....T.......#...#.#...#.....#.#.....#.#...#.....#.#...#.#
#.#.#.#.###########.#.#.###############.#.#.#.#######.#.###.#.#.#.#####.#.#.###.#
#.#...#.......#.....#.#.......#.....#...#.#.#...#.........#j....#.#...#.#.#.#...#
#.###########.#.#.#.#.#########.###.#.#.#.#.###.#.#########.#####.###.#.#.#.#.#.#
#.#.....#...#.#.#.#.#...........#...#.#.#.#...#.#.#...#...#.#...#...#.#.#...#.#.#
#.#P###.#D#.#.#.#.###############.###.#.#.###.#.#.###.#.#.###.#.###.#.#.#####.###
#...#...#.#.#u..#.......#...#.....#...#.#.#...#.......#.#.....#...#...#.....#...#
#####.###.#.#######.###.#.###.#######.#.#.#########.###.#########.#########.###.#
#...#.#...#g......#...#.#...#.#.....#.#.#.#...#...#.#...#.......#.#.........#...#
#.#.#.#.#########.###.#.###.#.###.#.#.#.#.#.#.#.#.###.#######.#.#.#.#########O#.#
#.#...#..d#.....#...#.#.....#.....#...#.#...#...#.....#.....#.#.#...#.....#...#.#
#.#######.#.###F###.#.#################.#.###############.#.#.#.#######.#.#.###.#
#.....#...#..h#...#.#.............#.....#.#.......#.......#...#.....#...#.#.#...#
#.###.#H#####.#.###G#.#######.#####.#####.###.#.#.#.###.###########.#.###.#.#####
#.#.#.#.......#.#...#.....#...#...#.#...#...#.#.#.#...#.#...#.....#...#.#.#.....#
#.#.#.#########.#.#########.###.#.#.###.###.#.#.#.#####.#.#.#####.#####.#.#####.#
#...#.....#.....#b..#...#...#...#...#...#...#.#.#.....#...#.#y..#.......#.....#.#
###.#####.#.#######.###B#.#.#.#######.#.#.#####.#####.#.###.###.#####.#.#.#####.#
#...#...I.#f......#.....#.#.#.#...#...#.#...#...#...#.#.#.....#.....#.#...#.....#
#####.###########.#######.###.#.###.#.#####.#.###.###.###.#########.#######.#####
#o....#k........#.#.#.......#.#.#...#...#.#.#.#.....#.#...#.......#.......K.#...#
#.#####.###.#####.#.#.#####.#.#.#.#####.#.#.#.###.#.#.#.###.###.###############.#
#.#.......#...#.C.#.....#...#.#...#...#.#...#...#.#.#.#...#...#.....#...........#
#.#.#########.#.#########.###.###.#.###.#.#####.#.#.#.###.###.#####.#.#.#######.#
#...#l........#...#.....#...#...#...#...#.......#.#...#...#...#...#...#.X.#...#.#
#.###.#.#########.#V###.###.###.#####.###########.#####.###.###.#########.#.#.#.#
#...#.#.#.....#...#.#.#.#...#.#.....#...#.......#...#...#...#...........#.#.#.#.#
#####.#.#.###.#.###.#.#.#.#.#.#####.###.#.#####.###.#.#.#.###.#######.###.#.#.#W#
#.....#.#.#r#.#.#...#.#.#.#.#.#...#...#.#.#...#...#.#.#.#...#.......#...#.#.#.#.#
#.#######.#.#.#.###.#.#.#.#.#.#.#.###.#.#.###.###.#.#.#.###.###########.#.#.#.#.#
#.........#.#.#.#s..#...#.#.Q.#.#.#...#.#...#...#...#.#.............#...#.#.#...#
#.#########.#.#.#.###.###.#.###.#.#.###.###.#.#.#####.#######.#####.#.###.#.#####
#...#...#...#.#...#...#...#.#...#...#...#.#.#.#.....#...#...#.#...#...#...#...#.#
###.#Y#.###.#.#####.###.#####.#########.#.#.###.###.#####.#.###.#.#####.#####.#.#
#.....#.....#.......#...........................#.........#....q#.......#.......#
#######################################.@.#######################################
#...#.#.................#..z..............#.......#.............#...............#
#.#.#.#.#.#############.#.#.###########.#.#.#.#####.#####.#####.#.###.#########.#
#.#...#.#.#...#.#.....#.#.#.#.....#...#.#...#.#...Z.....#.#.....#.#.#.#.......#.#
#.#####.#.#.#.#.#.#.#.#.###.#.#####.#.#.#.###.#.#########.#######.#.#.#####.###.#
#.#...#.#...#.#...#.#x#.#...#.#.....#.#.#...#.....#.....#.#...#.....#.#...#.....#
#.#.#.#.#####.#####.###.#.###.#.#####.#.###.#######.###.#.#.#.#.#####.#.#.#####.#
#w..#...#...#.....#.#.....#...#.#.....#.#.#...#.....#.#...#.#...#..v#.#.#.....#.#
#.#######.#.#####.#.#.#####.###.#.#####.#.###.#.#####.#.###.#####.#.#.#.#####.###
#.#.......#.#.#...#.#.#...#.#...#.#...#.#...#.#.#.......#...#...#.#.#.#.#...#...#
#.###.#.###.#.#.###.#.#.#.#.#.###.#.#.#.#.###.#.###.#####.###.#.#.#.#.#.###.###.#
#...#.#...#...#.#.#...#.#.#...#.#.#.#...#...#.#...#.#...#.#...#.R.#.#.........#.#
###.#####.###.#.#.#.###.#.###.#.#.#.#####.#.#.###.#.#.#.#.#.#######.#.#########.#
#.#...#...#.#.#.#.....#.#...#...#.......#.#.#...#.#...#.#.#.#...#...#.#.........#
#.###.#.###.#.#.#######.###.#.#########.#.#.###.#.#######.#.#.###.###.#.#######.#
#...#...#...#.#.........#...#.#...#.....#.#...#.#.........#.#.#...#...#.#.......#
#.#######.#.#.###########.#####.#.#####.###.###.###########.#.#.#######.#########
#.........#.#.#.........#.......#.#...#.#...#...#...........#.#.#.....#.........#
#.###.#######.#.###.#####.#####.#.#.#.###.#.#.###.###########.#.#.###S#########.#
#...#.......#...#...#...#.#...#.#...#...#.#.#...#.....L.#.....#...#...#...#...#.#
#.#########.#####.###.#.###.#.###.#####.#.#####.#######.#.#########.###.#.#.#.#.#
#.#.......#.#...#.#.#.#.#...#...#...#...#...........#...#...#.#....c#...#...#.#.#
###.#####.#.#.#.#.#.###.#.#####.#####.###.###########.#####.#.#.#####.#######.#.#
#...#.......#.#...#...#...#...#...#...#.#...#.........#.....#...#.......#.......#
#.###.#######.#####.#######.#.###.#.###.###.#.###########.#.#########.#.#######.#
#.#.#.#...#...#.............#...#...#...#...#.............#.........#.#.#.....#.#
#.#.#.#.#.#.###########.#####.#.#####.###.#########################.###.#.###.#.#
#.#...#.#.#.....#.....#...#...#.#.#.....#.....#...#.......#.......#...#...#...#.#
#.#####.#.#####.#.###.#####.###.#.#.###.#####.#.###.###.###.#####.###.#####.#####
#.......#...#.#...#.#.#.....#.#.#...#...#...#.#.#.....#.........#...#.....#.....#
#.#######.#.#.#####E#.#.#####.#.#.###.#.#.#.#.#.#.#############.#.#.#####.###.#.#
#...#.....#...#...#...#.#.....#.#...#.#.#.#...#.....#..a#.....#.#.#...#.#...#.#.#
#####.#######.#.###.###.#.###.#.#.###.#.#.###########.#.#.###.###.###.#.###.###.#
#...#.#.#...#.#.#...#...#.#...#.#.#...#.#.....#.....#.#.#.#.#...#...#...#.#...#.#
#.#.#.#.#.#.#.#.#.###.#.#.#.#.#.###.###.#####.#.###.#.#.#.#.###.###.###.#.###.#.#
#.#.#.#.#.#.....#.#...#.#.#.#.#.....#.#.#.....#.#...#.#...#...#...#.#.#.#...#..i#
#.#.#.#.#.#######.#####.###.#########.#.#.#####U#.###.#######.###.#.#.#.#.#.#####
#.#n..#.......#...#...#...#.#...#.......#.......#t#...#.........#.#.#.#...#.#...#
#.#############.###.#.###.#.#.#.#.###############.#.###.#.#######.#.#.#####.#.#.#
#...............J...#.....#...#.........#...........#...#.........M.#..p......#.#
#################################################################################";
