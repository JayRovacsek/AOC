# This file was @generated by cargo2nix 0.11.0.
# It is not intended to be manually edited.

args@{ release ? true, rootFeatures ? [ "aoc_2022/default" ], rustPackages
, buildRustPackages, hostPlatform, hostPlatformCpu ? null
, hostPlatformFeatures ? [ ], target ? null, codegenOpts ? null
, profileOpts ? null, rustcLinkFlags ? null, rustcBuildFlags ? null, mkRustCrate
, rustLib, lib, workspaceSrc, }:
let workspaceSrc = if args.workspaceSrc == null then ./. else args.workspaceSrc;
in let
  inherit (rustLib)
    fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry
    expandFeatures decideProfile genDrvsByProfile;
  profilesByName = { };
  rootFeatures' = expandFeatures rootFeatures;
  overridableMkRustCrate = f:
    let
      drvs = genDrvsByProfile profilesByName ({ profile, profileName }:
        mkRustCrate ({
          inherit release profile hostPlatformCpu hostPlatformFeatures target
            profileOpts codegenOpts rustcLinkFlags rustcBuildFlags;
        } // (f profileName)));
    in { compileMode ? null, profileName ? decideProfile compileMode release }:
    let drv = drvs.${profileName};
    in if compileMode == null then
      drv
    else
      drv.override { inherit compileMode; };
in {
  cargo2nixVersion = "0.11.0";
  workspace = { aoc_2022 = rustPackages.unknown.aoc_2022."0.0.1"; };
  "registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.20" =
    overridableMkRustCrate (profileName: rec {
      name = "aho-corasick";
      version = "0.7.20";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "cc936419f96fa211c1b9166887b38e5e40b19958e5b895be7c1f93adec7071ac";
      };
      features = builtins.concatLists [ [ "default" ] [ "std" ] ];
      dependencies = {
        memchr =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".anes."0.1.6" =
    overridableMkRustCrate (profileName: rec {
      name = "anes";
      version = "0.1.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "4b46cbb362ab8752921c97e041f5e366ee6297bd428a31275b9fcf1e380f7299";
      };
      features = builtins.concatLists [ [ "default" ] ];
    });

  "unknown".aoc_2022."0.0.1" = overridableMkRustCrate (profileName: rec {
    name = "aoc_2022";
    version = "0.0.1";
    registry = "unknown";
    src = fetchCrateLocal workspaceSrc;
    dependencies = {
      humantime =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."2.1.0" {
          inherit profileName;
        };
      itertools =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" {
          inherit profileName;
        };
      lazy_static =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" {
          inherit profileName;
        };
      rand =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" {
          inherit profileName;
        };
      rayon =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.6.0" {
          inherit profileName;
        };
      regex =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.0" {
          inherit profileName;
        };
    };
    devDependencies = {
      criterion =
        rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion."0.4.0" {
          inherit profileName;
        };
    };
  });

  "registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" =
    overridableMkRustCrate (profileName: rec {
      name = "atty";
      version = "0.2.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8";
      };
      dependencies = {
        ${
          if hostPlatform.parsed.kernel.name == "hermit" then
            "hermit_abi"
          else
            null
        } =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.19" {
            inherit profileName;
          };
        ${if hostPlatform.isUnix then "libc" else null} =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.137" {
            inherit profileName;
          };
        ${if hostPlatform.isWindows then "winapi" else null} =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" =
    overridableMkRustCrate (profileName: rec {
      name = "autocfg";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" =
    overridableMkRustCrate (profileName: rec {
      name = "bitflags";
      version = "1.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a";
      };
      features = builtins.concatLists [ [ "default" ] ];
    });

  "registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.11.1" =
    overridableMkRustCrate (profileName: rec {
      name = "bumpalo";
      version = "3.11.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "572f695136211188308f16ad2ca5c851a712c464060ae6974944458eb83880ba";
      };
      features = builtins.concatLists [ [ "default" ] ];
    });

  "registry+https://github.com/rust-lang/crates.io-index".cast."0.3.0" =
    overridableMkRustCrate (profileName: rec {
      name = "cast";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" =
    overridableMkRustCrate (profileName: rec {
      name = "cfg-if";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".ciborium."0.2.0" =
    overridableMkRustCrate (profileName: rec {
      name = "ciborium";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "b0c137568cc60b904a7724001b35ce2630fd00d5d84805fbb608ab89509d788f";
      };
      features = builtins.concatLists [ [ "default" ] [ "std" ] ];
      dependencies = {
        ciborium_io =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium-io."0.2.0" {
            inherit profileName;
          };
        ciborium_ll =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium-ll."0.2.0" {
            inherit profileName;
          };
        serde =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.148" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".ciborium-io."0.2.0" =
    overridableMkRustCrate (profileName: rec {
      name = "ciborium-io";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "346de753af073cc87b52b2083a506b38ac176a44cfb05497b622e27be899b369";
      };
      features = builtins.concatLists [ [ "alloc" ] [ "std" ] ];
    });

  "registry+https://github.com/rust-lang/crates.io-index".ciborium-ll."0.2.0" =
    overridableMkRustCrate (profileName: rec {
      name = "ciborium-ll";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "213030a2b5a4e0c0892b6652260cf6ccac84827b83a85a534e178e3906c4cf1b";
      };
      dependencies = {
        ciborium_io =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium-io."0.2.0" {
            inherit profileName;
          };
        half =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".half."1.8.2" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".clap."3.2.23" =
    overridableMkRustCrate (profileName: rec {
      name = "clap";
      version = "3.2.23";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "71655c45cb9845d3270c9d6df84ebe72b4dad3c2ba3f7023ad47c144e4e473a5";
      };
      features = builtins.concatLists [ [ "std" ] ];
      dependencies = {
        bitflags =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" {
            inherit profileName;
          };
        clap_lex =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.2.4" {
            inherit profileName;
          };
        indexmap =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.2" {
            inherit profileName;
          };
        textwrap =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".textwrap."0.16.0" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.2.4" =
    overridableMkRustCrate (profileName: rec {
      name = "clap_lex";
      version = "0.2.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "2850f2f5a82cbf437dd5af4d49848fbdfc27c157c3d010345776f952765261c5";
      };
      dependencies = {
        os_str_bytes =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".os_str_bytes."6.4.1" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".criterion."0.4.0" =
    overridableMkRustCrate (profileName: rec {
      name = "criterion";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "e7c76e09c1aae2bc52b3d2f29e13c6572553b30c4aa1b8a49fd70de6412654cb";
      };
      features = builtins.concatLists [
        [ "cargo_bench_support" ]
        [ "default" ]
        [ "plotters" ]
        [ "rayon" ]
      ];
      dependencies = {
        anes =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".anes."0.1.6" {
            inherit profileName;
          };
        atty =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" {
            inherit profileName;
          };
        cast =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".cast."0.3.0" {
            inherit profileName;
          };
        ciborium =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".ciborium."0.2.0" {
            inherit profileName;
          };
        clap =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."3.2.23" {
            inherit profileName;
          };
        criterion_plot =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".criterion-plot."0.5.0" {
            inherit profileName;
          };
        itertools =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" {
            inherit profileName;
          };
        lazy_static =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" {
            inherit profileName;
          };
        num_traits =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" {
            inherit profileName;
          };
        oorandom =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".oorandom."11.1.3" {
            inherit profileName;
          };
        plotters =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters."0.3.4" {
            inherit profileName;
          };
        rayon =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.6.0" {
            inherit profileName;
          };
        regex =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.7.0" {
            inherit profileName;
          };
        serde =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.148" {
            inherit profileName;
          };
        serde_derive =
          buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.148" {
            profileName = "__noProfile";
          };
        serde_json =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.89" {
            inherit profileName;
          };
        tinytemplate =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinytemplate."1.2.1" {
            inherit profileName;
          };
        walkdir =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.2" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".criterion-plot."0.5.0" =
    overridableMkRustCrate (profileName: rec {
      name = "criterion-plot";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "6b50826342786a51a89e2da3a28f1c32b06e387201bc2d19791f622c673706b1";
      };
      dependencies = {
        cast =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".cast."0.3.0" {
            inherit profileName;
          };
        itertools =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.5.6" =
    overridableMkRustCrate (profileName: rec {
      name = "crossbeam-channel";
      version = "0.5.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "c2dd04ddaf88237dc3b8d8f9a3c1004b506b54b3313403944054d23c0870c521";
      };
      features =
        builtins.concatLists [ [ "crossbeam-utils" ] [ "default" ] [ "std" ] ];
      dependencies = {
        cfg_if =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {
            inherit profileName;
          };
        crossbeam_utils =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.14" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.8.2" =
    overridableMkRustCrate (profileName: rec {
      name = "crossbeam-deque";
      version = "0.8.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "715e8152b692bba2d374b53d4875445368fdf21a94751410af607a5ac677d1fc";
      };
      features = builtins.concatLists [
        [ "crossbeam-epoch" ]
        [ "crossbeam-utils" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {
            inherit profileName;
          };
        crossbeam_epoch =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.9.13" {
            inherit profileName;
          };
        crossbeam_utils =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.14" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.9.13" =
    overridableMkRustCrate (profileName: rec {
      name = "crossbeam-epoch";
      version = "0.9.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "01a9af1f4c2ef74bb8aa1f7e19706bc72d03598c8a570bb5de72243c7a9d9d5a";
      };
      features = builtins.concatLists [ [ "alloc" ] [ "std" ] ];
      dependencies = {
        cfg_if =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {
            inherit profileName;
          };
        crossbeam_utils =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.14" {
            inherit profileName;
          };
        memoffset =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".memoffset."0.7.1" {
            inherit profileName;
          };
        scopeguard =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" {
            inherit profileName;
          };
      };
      buildDependencies = {
        autocfg =
          buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" {
            profileName = "__noProfile";
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.14" =
    overridableMkRustCrate (profileName: rec {
      name = "crossbeam-utils";
      version = "0.8.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "4fb766fa798726286dbbb842f174001dab8abc7b627a1dd86e0b7222a95d929f";
      };
      features = builtins.concatLists [ [ "default" ] [ "std" ] ];
      dependencies = {
        cfg_if =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".either."1.8.0" =
    overridableMkRustCrate (profileName: rec {
      name = "either";
      version = "1.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "90e5c1c8368803113bf0c9584fc495a58b86dc8a29edbf8fe877d21d9507e797";
      };
      features = builtins.concatLists [ [ "use_std" ] ];
    });

  "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.8" =
    overridableMkRustCrate (profileName: rec {
      name = "getrandom";
      version = "0.2.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "c05aeb6a22b8f62540c194aac980f2115af067bfe15a0734d7277a768d396b31";
      };
      features = builtins.concatLists [ [ "std" ] ];
      dependencies = {
        cfg_if =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {
            inherit profileName;
          };
        ${if hostPlatform.isUnix then "libc" else null} =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.137" {
            inherit profileName;
          };
        ${if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null} =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".half."1.8.2" =
    overridableMkRustCrate (profileName: rec {
      name = "half";
      version = "1.8.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "eabb4a44450da02c90444cf74558da904edde8fb4e9035a9a6a4e15445af0bd7";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" =
    overridableMkRustCrate (profileName: rec {
      name = "hashbrown";
      version = "0.12.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888";
      };
      features = builtins.concatLists [ [ "raw" ] ];
    });

  "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.19" =
    overridableMkRustCrate (profileName: rec {
      name = "hermit-abi";
      version = "0.1.19";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "62b467343b94ba476dcb2500d242dadbb39557df889310ac77c5d99100aaac33";
      };
      features = builtins.concatLists [ [ "default" ] ];
      dependencies = {
        libc =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.137" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".humantime."2.1.0" =
    overridableMkRustCrate (profileName: rec {
      name = "humantime";
      version = "2.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".indexmap."1.9.2" =
    overridableMkRustCrate (profileName: rec {
      name = "indexmap";
      version = "1.9.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "1885e79c1fc4b10f0e172c475f458b7f7b93061064d98c3293e98c5ba0c8b399";
      };
      features = builtins.concatLists [ [ "std" ] ];
      dependencies = {
        hashbrown =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.12.3" {
            inherit profileName;
          };
      };
      buildDependencies = {
        autocfg =
          buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" {
            profileName = "__noProfile";
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".itertools."0.10.5" =
    overridableMkRustCrate (profileName: rec {
      name = "itertools";
      version = "0.10.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473";
      };
      features =
        builtins.concatLists [ [ "default" ] [ "use_alloc" ] [ "use_std" ] ];
      dependencies = {
        either =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.8.0" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.4" =
    overridableMkRustCrate (profileName: rec {
      name = "itoa";
      version = "1.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "4217ad341ebadf8d8e724e264f13e593e0648f5b3e94b3896a5df283be015ecc";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.60" =
    overridableMkRustCrate (profileName: rec {
      name = "js-sys";
      version = "0.3.60";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "49409df3e3bf0856b916e2ceaca09ee28e6871cf7d9ce97a692cacfdb2a25a47";
      };
      dependencies = {
        wasm_bindgen =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.83" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" =
    overridableMkRustCrate (profileName: rec {
      name = "lazy_static";
      version = "1.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.137" =
    overridableMkRustCrate (profileName: rec {
      name = "libc";
      version = "0.2.137";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89";
      };
      features = builtins.concatLists [ [ "default" ] [ "std" ] ];
    });

  "registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" =
    overridableMkRustCrate (profileName: rec {
      name = "log";
      version = "0.4.17";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "abb12e687cfb44aa40f41fc3978ef76448f9b6038cad6aef4259d3c095a2382e";
      };
      dependencies = {
        cfg_if =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" =
    overridableMkRustCrate (profileName: rec {
      name = "memchr";
      version = "2.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d";
      };
      features = builtins.concatLists [ [ "default" ] [ "std" ] ];
    });

  "registry+https://github.com/rust-lang/crates.io-index".memoffset."0.7.1" =
    overridableMkRustCrate (profileName: rec {
      name = "memoffset";
      version = "0.7.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "5de893c32cde5f383baa4c04c5d6dbdd735cfd4a794b0debdb2bb1b421da5ff4";
      };
      features = builtins.concatLists [ [ "default" ] ];
      buildDependencies = {
        autocfg =
          buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" {
            profileName = "__noProfile";
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" =
    overridableMkRustCrate (profileName: rec {
      name = "num-traits";
      version = "0.2.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "578ede34cf02f8924ab9447f50c28075b4d3e5b269972345e7e0372b38c6cdcd";
      };
      features = builtins.concatLists [ [ "default" ] [ "std" ] ];
      buildDependencies = {
        autocfg =
          buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" {
            profileName = "__noProfile";
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.14.0" =
    overridableMkRustCrate (profileName: rec {
      name = "num_cpus";
      version = "1.14.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "f6058e64324c71e02bc2b150e4f3bc8286db6c83092132ffa3f6b1eab0f9def5";
      };
      dependencies = {
        ${
          if (hostPlatform.parsed.cpu.name == "x86_64"
            || hostPlatform.parsed.cpu.name == "aarch64")
          && hostPlatform.parsed.kernel.name == "hermit" then
            "hermit_abi"
          else
            null
        } =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.19" {
            inherit profileName;
          };
        ${if !hostPlatform.isWindows then "libc" else null} =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.137" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.16.0" =
    overridableMkRustCrate (profileName: rec {
      name = "once_cell";
      version = "1.16.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "86f0b0d4bf799edbc74508c1e8bf170ff5f41238e5f8225603ca7caaae2b7860";
      };
      features =
        builtins.concatLists [ [ "alloc" ] [ "default" ] [ "race" ] [ "std" ] ];
    });

  "registry+https://github.com/rust-lang/crates.io-index".oorandom."11.1.3" =
    overridableMkRustCrate (profileName: rec {
      name = "oorandom";
      version = "11.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".os_str_bytes."6.4.1" =
    overridableMkRustCrate (profileName: rec {
      name = "os_str_bytes";
      version = "6.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "9b7820b9daea5457c9f21c69448905d723fbd21136ccf521748f23fd49e723ee";
      };
      features = builtins.concatLists [ [ "raw_os_str" ] ];
    });

  "registry+https://github.com/rust-lang/crates.io-index".plotters."0.3.4" =
    overridableMkRustCrate (profileName: rec {
      name = "plotters";
      version = "0.3.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "2538b639e642295546c50fcd545198c9d64ee2a38620a628724a3b266d5fbf97";
      };
      features = builtins.concatLists [
        [ "area_series" ]
        [ "line_series" ]
        [ "plotters-svg" ]
        [ "svg_backend" ]
      ];
      dependencies = {
        num_traits =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.15" {
            inherit profileName;
          };
        plotters_backend =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters-backend."0.3.4" {
            inherit profileName;
          };
        plotters_svg =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters-svg."0.3.3" {
            inherit profileName;
          };
        ${
          if hostPlatform.parsed.cpu.name == "wasm32"
          && !(hostPlatform.parsed.kernel.name == "wasi") then
            "wasm_bindgen"
          else
            null
        } =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.83" {
            inherit profileName;
          };
        ${
          if hostPlatform.parsed.cpu.name == "wasm32"
          && !(hostPlatform.parsed.kernel.name == "wasi") then
            "web_sys"
          else
            null
        } =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.60" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".plotters-backend."0.3.4" =
    overridableMkRustCrate (profileName: rec {
      name = "plotters-backend";
      version = "0.3.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "193228616381fecdc1224c62e96946dfbc73ff4384fba576e052ff8c1bea8142";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".plotters-svg."0.3.3" =
    overridableMkRustCrate (profileName: rec {
      name = "plotters-svg";
      version = "0.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "f9a81d2759aae1dae668f783c308bc5c8ebd191ff4184aaa1b37f65a6ae5a56f";
      };
      dependencies = {
        plotters_backend =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".plotters-backend."0.3.4" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.17" =
    overridableMkRustCrate (profileName: rec {
      name = "ppv-lite86";
      version = "0.2.17";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de";
      };
      features = builtins.concatLists [ [ "simd" ] [ "std" ] ];
    });

  "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.47" =
    overridableMkRustCrate (profileName: rec {
      name = "proc-macro2";
      version = "1.0.47";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "5ea3d908b0e36316caf9e9e2c4625cdde190a7e6f440d794667ed17a1855e725";
      };
      features = builtins.concatLists [ [ "default" ] [ "proc-macro" ] ];
      dependencies = {
        unicode_ident =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.5" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.21" =
    overridableMkRustCrate (profileName: rec {
      name = "quote";
      version = "1.0.21";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "bbe448f377a7d6961e30f5955f9b8d106c3f5e449d493ee1b125c1d43c2b5179";
      };
      features = builtins.concatLists [ [ "default" ] [ "proc-macro" ] ];
      dependencies = {
        proc_macro2 =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.47" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" =
    overridableMkRustCrate (profileName: rec {
      name = "rand";
      version = "0.8.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404";
      };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "getrandom" ]
        [ "libc" ]
        [ "rand_chacha" ]
        [ "std" ]
        [ "std_rng" ]
      ];
      dependencies = {
        ${if hostPlatform.isUnix then "libc" else null} =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.137" {
            inherit profileName;
          };
        rand_chacha =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" {
            inherit profileName;
          };
        rand_core =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" =
    overridableMkRustCrate (profileName: rec {
      name = "rand_chacha";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88";
      };
      features = builtins.concatLists [ [ "std" ] ];
      dependencies = {
        ppv_lite86 =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.17" {
            inherit profileName;
          };
        rand_core =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" =
    overridableMkRustCrate (profileName: rec {
      name = "rand_core";
      version = "0.6.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c";
      };
      features = builtins.concatLists [ [ "alloc" ] [ "getrandom" ] [ "std" ] ];
      dependencies = {
        getrandom =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.8" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".rayon."1.6.0" =
    overridableMkRustCrate (profileName: rec {
      name = "rayon";
      version = "1.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "1e060280438193c554f654141c9ea9417886713b7acd75974c85b18a69a88e0b";
      };
      dependencies = {
        crossbeam_deque =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.8.2" {
            inherit profileName;
          };
        either =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.8.0" {
            inherit profileName;
          };
        rayon_core =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.10.1" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.10.1" =
    overridableMkRustCrate (profileName: rec {
      name = "rayon-core";
      version = "1.10.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "cac410af5d00ab6884528b4ab69d1e8e146e8d471201800fa1b4524126de6ad3";
      };
      dependencies = {
        crossbeam_channel =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.5.6" {
            inherit profileName;
          };
        crossbeam_deque =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.8.2" {
            inherit profileName;
          };
        crossbeam_utils =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.14" {
            inherit profileName;
          };
        num_cpus =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.14.0" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".regex."1.7.0" =
    overridableMkRustCrate (profileName: rec {
      name = "regex";
      version = "1.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "e076559ef8e241f2ae3479e36f97bd5741c0330689e217ad51ce2c76808b868a";
      };
      features = builtins.concatLists [
        [ "aho-corasick" ]
        [ "default" ]
        [ "memchr" ]
        [ "perf" ]
        [ "perf-cache" ]
        [ "perf-dfa" ]
        [ "perf-inline" ]
        [ "perf-literal" ]
        [ "std" ]
        [ "unicode" ]
        [ "unicode-age" ]
        [ "unicode-bool" ]
        [ "unicode-case" ]
        [ "unicode-gencat" ]
        [ "unicode-perl" ]
        [ "unicode-script" ]
        [ "unicode-segment" ]
      ];
      dependencies = {
        aho_corasick =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.20" {
            inherit profileName;
          };
        memchr =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.5.0" {
            inherit profileName;
          };
        regex_syntax =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.28" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.28" =
    overridableMkRustCrate (profileName: rec {
      name = "regex-syntax";
      version = "0.6.28";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "456c603be3e8d448b072f410900c09faf164fbce2d480456f50eea6e25f9c848";
      };
      features = builtins.concatLists [
        [ "default" ]
        [ "unicode" ]
        [ "unicode-age" ]
        [ "unicode-bool" ]
        [ "unicode-case" ]
        [ "unicode-gencat" ]
        [ "unicode-perl" ]
        [ "unicode-script" ]
        [ "unicode-segment" ]
      ];
    });

  "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.11" =
    overridableMkRustCrate (profileName: rec {
      name = "ryu";
      version = "1.0.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "4501abdff3ae82a1c1b477a17252eb69cee9e66eb915c1abaa4f44d873df9f09";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" =
    overridableMkRustCrate (profileName: rec {
      name = "same-file";
      version = "1.0.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502";
      };
      dependencies = {
        ${if hostPlatform.isWindows then "winapi_util" else null} =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" =
    overridableMkRustCrate (profileName: rec {
      name = "scopeguard";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.148" =
    overridableMkRustCrate (profileName: rec {
      name = "serde";
      version = "1.0.148";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "e53f64bb4ba0191d6d0676e1b141ca55047d83b74f5607e6d8eb88126c52c2dc";
      };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "derive" ]
        [ "serde_derive" ]
        [ "std" ]
      ];
      dependencies = {
        serde_derive =
          buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.148" {
            profileName = "__noProfile";
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.148" =
    overridableMkRustCrate (profileName: rec {
      name = "serde_derive";
      version = "1.0.148";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "a55492425aa53521babf6137309e7d34c20bbfbbfcfe2c7f3a047fd1f6b92c0c";
      };
      features = builtins.concatLists [ [ "default" ] ];
      dependencies = {
        proc_macro2 =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.47" {
            inherit profileName;
          };
        quote =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.21" {
            inherit profileName;
          };
        syn =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.104" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.89" =
    overridableMkRustCrate (profileName: rec {
      name = "serde_json";
      version = "1.0.89";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "020ff22c755c2ed3f8cf162dbb41a7268d934702f3ed3631656ea597e08fc3db";
      };
      features = builtins.concatLists [ [ "default" ] [ "std" ] ];
      dependencies = {
        itoa =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.4" {
            inherit profileName;
          };
        ryu =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.11" {
            inherit profileName;
          };
        serde =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.148" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".syn."1.0.104" =
    overridableMkRustCrate (profileName: rec {
      name = "syn";
      version = "1.0.104";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "4ae548ec36cf198c0ef7710d3c230987c2d6d7bd98ad6edc0274462724c585ce";
      };
      features = builtins.concatLists [
        [ "clone-impls" ]
        [ "default" ]
        [ "derive" ]
        [ "full" ]
        [ "parsing" ]
        [ "printing" ]
        [ "proc-macro" ]
        [ "quote" ]
        [ "visit" ]
      ];
      dependencies = {
        proc_macro2 =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.47" {
            inherit profileName;
          };
        quote =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.21" {
            inherit profileName;
          };
        unicode_ident =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.5" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".textwrap."0.16.0" =
    overridableMkRustCrate (profileName: rec {
      name = "textwrap";
      version = "0.16.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "222a222a5bfe1bba4a77b45ec488a741b3cb8872e5e499451fd7d0129c9c7c3d";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".tinytemplate."1.2.1" =
    overridableMkRustCrate (profileName: rec {
      name = "tinytemplate";
      version = "1.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "be4d6b5f19ff7664e8c98d03e2139cb510db9b0a60b55f8e8709b689d939b6bc";
      };
      dependencies = {
        serde =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.148" {
            inherit profileName;
          };
        serde_json =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.89" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.5" =
    overridableMkRustCrate (profileName: rec {
      name = "unicode-ident";
      version = "1.0.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "6ceab39d59e4c9499d4e5a8ee0e2735b891bb7308ac83dfb4e80cad195c9f6f3";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.2" =
    overridableMkRustCrate (profileName: rec {
      name = "walkdir";
      version = "2.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "808cf2735cd4b6866113f648b791c6adc5714537bc222d9347bb203386ffda56";
      };
      dependencies = {
        same_file =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" {
            inherit profileName;
          };
        ${if hostPlatform.isWindows then "winapi" else null} =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" {
            inherit profileName;
          };
        ${if hostPlatform.isWindows then "winapi_util" else null} =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" =
    overridableMkRustCrate (profileName: rec {
      name = "wasi";
      version = "0.11.0+wasi-snapshot-preview1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423";
      };
      features = builtins.concatLists [ [ "default" ] [ "std" ] ];
    });

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.83" =
    overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen";
      version = "0.2.83";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "eaf9f5aceeec8be17c128b2e93e031fb8a4d469bb9c4ae2d7dc1888b26887268";
      };
      features = builtins.concatLists [ [ "default" ] [ "spans" ] [ "std" ] ];
      dependencies = {
        cfg_if =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" {
            inherit profileName;
          };
        wasm_bindgen_macro =
          buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.83" {
            profileName = "__noProfile";
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.83" =
    overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-backend";
      version = "0.2.83";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "4c8ffb332579b0557b52d268b91feab8df3615f265d5270fec2a8c95b17c1142";
      };
      features = builtins.concatLists [ [ "spans" ] ];
      dependencies = {
        bumpalo =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.11.1" {
            inherit profileName;
          };
        log =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.17" {
            inherit profileName;
          };
        once_cell =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.16.0" {
            inherit profileName;
          };
        proc_macro2 =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.47" {
            inherit profileName;
          };
        quote =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.21" {
            inherit profileName;
          };
        syn =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.104" {
            inherit profileName;
          };
        wasm_bindgen_shared =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.83" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.83" =
    overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-macro";
      version = "0.2.83";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "052be0f94026e6cbc75cdefc9bae13fd6052cdcaf532fa6c45e7ae33a1e6c810";
      };
      features = builtins.concatLists [ [ "spans" ] ];
      dependencies = {
        quote =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.21" {
            inherit profileName;
          };
        wasm_bindgen_macro_support =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.83" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.83" =
    overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-macro-support";
      version = "0.2.83";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "07bc0c051dc5f23e307b13285f9d75df86bfdf816c5721e573dec1f9b8aa193c";
      };
      features = builtins.concatLists [ [ "spans" ] ];
      dependencies = {
        proc_macro2 =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.47" {
            inherit profileName;
          };
        quote =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.21" {
            inherit profileName;
          };
        syn =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.104" {
            inherit profileName;
          };
        wasm_bindgen_backend =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.83" {
            inherit profileName;
          };
        wasm_bindgen_shared =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.83" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.83" =
    overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-shared";
      version = "0.2.83";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "1c38c045535d93ec4f0b4defec448e4291638ee608530863b1e2ba115d4fff7f";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.60" =
    overridableMkRustCrate (profileName: rec {
      name = "web-sys";
      version = "0.3.60";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "bcda906d8be16e728fd5adc5b729afad4e444e106ab28cd1c7256e54fa61510f";
      };
      features = builtins.concatLists [
        [ "CanvasRenderingContext2d" ]
        [ "Document" ]
        [ "DomRect" ]
        [ "DomRectReadOnly" ]
        [ "Element" ]
        [ "EventTarget" ]
        [ "HtmlCanvasElement" ]
        [ "HtmlElement" ]
        [ "Node" ]
        [ "Window" ]
      ];
      dependencies = {
        js_sys =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.60" {
            inherit profileName;
          };
        wasm_bindgen =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.83" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" =
    overridableMkRustCrate (profileName: rec {
      name = "winapi";
      version = "0.3.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419";
      };
      features = builtins.concatLists [
        [ "consoleapi" ]
        [ "errhandlingapi" ]
        [ "fileapi" ]
        [ "minwinbase" ]
        [ "minwindef" ]
        [ "processenv" ]
        [ "std" ]
        [ "winbase" ]
        [ "wincon" ]
        [ "winerror" ]
        [ "winnt" ]
      ];
      dependencies = {
        ${
          if hostPlatform.config == "i686-pc-windows-gnu" then
            "winapi_i686_pc_windows_gnu"
          else
            null
        } =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" {
            inherit profileName;
          };
        ${
          if hostPlatform.config == "x86_64-pc-windows-gnu" then
            "winapi_x86_64_pc_windows_gnu"
          else
            null
        } =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" =
    overridableMkRustCrate (profileName: rec {
      name = "winapi-i686-pc-windows-gnu";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6";
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" =
    overridableMkRustCrate (profileName: rec {
      name = "winapi-util";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178";
      };
      dependencies = {
        ${if hostPlatform.isWindows then "winapi" else null} =
          rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" {
            inherit profileName;
          };
      };
    });

  "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" =
    overridableMkRustCrate (profileName: rec {
      name = "winapi-x86_64-pc-windows-gnu";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo {
        inherit name version;
        sha256 =
          "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f";
      };
    });

}
